// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package cmd

import (
	"github.com/go-juno/juno/example/juno/api/grpc"
	service2 "github.com/go-juno/juno/example/juno/api/grpc/service"
	"github.com/go-juno/juno/example/juno/api/http"
	"github.com/go-juno/juno/example/juno/internal/endpoint"
	"github.com/go-juno/juno/example/juno/internal/repo"
	"github.com/go-juno/juno/example/juno/internal/service"
	grpc2 "google.golang.org/grpc"
	http2 "net/http"
)

// Injectors from wire.go:

// initApp init endpoints
func InitServer() (*Server, error) {
	db, err := repo.NewMysqlDB()
	if err != nil {
		return nil, err
	}
	greetingService := service.NewGreetingService(db)
	endpoints := endpoint.NewEndpoints(greetingService)
	server := http.NewHttp(endpoints)
	greetingServer := service2.NewGreetingServer(endpoints)
	grpcServer, err := grpc.NewGrpc(greetingServer)
	if err != nil {
		return nil, err
	}
	cmdServer := NewServer(server, grpcServer)
	return cmdServer, nil
}

// wire.go:

type Server struct {
	Http *http2.Server
	Grpc *grpc2.Server
}

func NewServer(http3 *http2.Server, grpc3 *grpc2.Server) *Server {
	return &Server{
		Grpc: grpc3,
		Http: http3,
	}
}
